{"ast":null,"code":"var _jsxFileName = \"/Users/TALIYV/Downloads/01-starting-project/src/components/UserFinder.js\";\nimport { Fragment, useState, useEffect, Component, useContext } from 'react';\nimport Users from './Users';\nimport classes from './UserFinder.module.css';\nimport UsersContext from '../store/user-context'; // const DUMMY_USERS = [\n//   { id: 'u1', name: 'Max' },\n//   { id: 'u2', name: 'Manuel' },\n//   { id: 'u3', name: 'Julie' },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserFinder extends Component {\n  constructor() {\n    super();\n    this.state = {\n      filteredUsers: [],\n      searchTerm: ''\n    };\n  } // calls only once at start\n\n\n  componentDidMount() {\n    //Send http request...\n    this.setState({\n      filteredUsers: this.context.users\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchTerm !== this.state.searchTerm) {\n      this.setState({\n        filteredUsers: this.context.users.filter(user => user.name.includes(this.state.searchTerm))\n      });\n    }\n  }\n\n  searchChangeHandler(event) {\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.finder,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          onChange: this.searchChangeHandler.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Users, {\n        users: this.state.filteredUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n} // const UserFinder = () => {\n//   const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   useEffect(() => {\n//     setFilteredUsers(\n//       DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\n//     );\n//   }, [searchTerm]);\n//   const searchChangeHandler = (event) => {\n//     setSearchTerm(event.target.value);\n//   };\n//   return (\n//     <Fragment>\n//       <div className={classes.finder}>\n//       <input type='search' onChange={searchChangeHandler} />\n//       </div>\n//       <Users users={filteredUsers} />\n//     </Fragment>\n//   );\n// };\n\n\nUserFinder.contextType = UsersContext;\nexport default UserFinder;","map":{"version":3,"sources":["/Users/TALIYV/Downloads/01-starting-project/src/components/UserFinder.js"],"names":["Fragment","useState","useEffect","Component","useContext","Users","classes","UsersContext","UserFinder","constructor","state","filteredUsers","searchTerm","componentDidMount","setState","context","users","componentDidUpdate","prevProps","prevState","filter","user","name","includes","searchChangeHandler","event","target","value","render","finder","bind","contextType"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,EAAwCC,SAAxC,EAAmDC,UAAnD,QAAqE,OAArE;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,YAAP,MAAyB,uBAAzB,C,CAEA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAEjCM,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,EADJ;AAEXC,MAAAA,UAAU,EAAE;AAFD,KAAb;AAID,GARgC,CAUjC;;;AACAC,EAAAA,iBAAiB,GAAE;AACjB;AACA,SAAKC,QAAL,CAAc;AAACH,MAAAA,aAAa,EAAE,KAAKI,OAAL,CAAaC;AAA7B,KAAd;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAIA,SAAS,CAACP,UAAV,KAAyB,KAAKF,KAAL,CAAWE,UAAxC,EAAoD;AAClD,WAAKE,QAAL,CAAc;AACZH,QAAAA,aAAa,EAAE,KAAKI,OAAL,CAAaC,KAAb,CAAmBI,MAAnB,CAA2BC,IAAD,IACvCA,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,KAAKb,KAAL,CAAWE,UAA9B,CADa;AADH,OAAd;AAKD;AACF;;AAEDY,EAAAA,mBAAmB,CAACC,KAAD,EAAQ;AACzB,SAAKX,QAAL,CAAc;AAAEF,MAAAA,UAAU,EAAEa,KAAK,CAACC,MAAN,CAAaC;AAA3B,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,QAAD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEtB,OAAO,CAACuB,MAAxB;AAAA,+BACE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,QAAQ,EAAE,KAAKL,mBAAL,CAAyBM,IAAzB,CAA8B,IAA9B;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWC;AAAzB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAvCgC,C,CA0CnC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAhEMH,U,CACGuB,W,GAAcxB,Y;AAiEvB,eAAeC,UAAf","sourcesContent":["import { Fragment, useState, useEffect, Component, useContext } from 'react';\nimport Users from './Users';\nimport classes from './UserFinder.module.css';\nimport UsersContext from '../store/user-context';\n\n// const DUMMY_USERS = [\n//   { id: 'u1', name: 'Max' },\n//   { id: 'u2', name: 'Manuel' },\n//   { id: 'u3', name: 'Julie' },\n// ];\n\nclass UserFinder extends Component {\n  static contextType = UsersContext;\n  constructor() {\n    super();\n    this.state = {\n      filteredUsers: [],\n      searchTerm: '',\n    };\n  }\n\n  // calls only once at start\n  componentDidMount(){\n    //Send http request...\n    this.setState({filteredUsers: this.context.users });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchTerm !== this.state.searchTerm) {\n      this.setState({\n        filteredUsers: this.context.users.filter((user) =>\n          user.name.includes(this.state.searchTerm)\n        ),\n      });\n    }\n  }\n\n  searchChangeHandler(event) {\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div className={classes.finder}>\n          <input type='search' onChange={this.searchChangeHandler.bind(this)} />\n        </div>\n        <Users users={this.state.filteredUsers} />\n      </Fragment>\n    );\n  }\n}\n\n// const UserFinder = () => {\n//   const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n//   const [searchTerm, setSearchTerm] = useState('');\n\n//   useEffect(() => {\n//     setFilteredUsers(\n//       DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\n//     );\n//   }, [searchTerm]);\n\n//   const searchChangeHandler = (event) => {\n//     setSearchTerm(event.target.value);\n//   };\n\n//   return (\n//     <Fragment>\n//       <div className={classes.finder}>\n//       <input type='search' onChange={searchChangeHandler} />\n//       </div>\n//       <Users users={filteredUsers} />\n//     </Fragment>\n//   );\n// };\n\nexport default UserFinder;"]},"metadata":{},"sourceType":"module"}